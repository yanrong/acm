使用动态规划解决这道题：

对应位置符号能匹配上，即 p.charAt(j) == s.charAt(i)，那么dp[i][j] = dp[i-1][j-1]，也就是前面能匹配上，就代表当前能匹配上。
如果是一个点，p.charAt(j) == '.' ，那么dp[i][j] = dp[i-1][j-1]，也就是前面能匹配上，就代表当前能匹配上。
如果是一个*，有两种情况，
第一种，我们用*前面的字符去匹配s，匹配不上，那*只能为空，那么dp[i][j] = dp[i][j-2] ；
能匹配上;或者*前面是个点，
dp[i][j] = dp[i-1][j] //a* 表示多个 a
or dp[i][j] = dp[i][j-1] //a* 表示 一个 a
or dp[i][j] = dp[i][j-2] // a* 表示空的

